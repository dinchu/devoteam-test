name: Deploy Microservices Demo on GCP

on:
  workflow_dispatch: # Enables manual trigger from GitHub Actions UI

jobs:
  terraform-deploy:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true
    - name: Install Google Cloud SDK and gke-gcloud-auth-plugin
      run: |
        sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        sudo apt-get update && sudo apt-get install -y google-cloud-sdk kubectl
          gcloud components install gke-gcloud-auth-plugin
          
    - name: Configure GCP Credentials
      run: |
        # Decode the base64 encoded service account key and write it to a file
        echo "${{ secrets.GCP_CREDENTIALS }}" | base64 --decode > /tmp/gcp-key.json

        # Set up the Google Cloud SDK and authenticate using the decoded key
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT }}
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcp-key.json
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-key.json

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8 # Specify your Terraform version here

    - name: Initialize Terraform
      run: terraform init
      working-directory: terraform

    - name: Plan Terraform Changes
      run: terraform plan -var="gcp_project_id=${{ secrets.GCP_PROJECT }}" -out=tfplan
      working-directory: terraform

    - name: Apply Terraform Changes
      run: terraform apply -auto-approve tfplan
      working-directory: terraform
    
    - name: Clean up GCP Credentials
      if: always()
      run: rm -f /tmp/gcp-key.json

    - name: Get the load balancer IP
      run: |
        gcloud container clusters get-credentials online-boutique --zone=us-central1 --project=${{ secrets.GCP_PROJECT }}
        kubectl get service frontend-external -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
